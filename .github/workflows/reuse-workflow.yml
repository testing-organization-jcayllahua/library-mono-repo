name: Reusing Worfklow
on:
  workflow_dispatch:
jobs:
  call_workflow:

    uses: ./.github/workflows/analyze_and_out.yml
    secrets:
      token: ${{secrets.API_TOKEN_GH}}

  show_output:
    needs: call_workflow
    runs-on: ubuntu-latest
    steps:
      - name: show it
        run: echo ${{needs.call_workflow.outputs.dependencies}} 
        
  run-and-test:
    runs-on: ubuntu-latest
    needs: call_workflow
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{needs.call_workflow.outputs.branch_created}}

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Pull JDK
        run: docker pull openjdk:17-jdk-slim
        
      - uses: grafana/setup-k6-action@v1

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
      - name: Show build.gradle (library)
        working-directory: library-example
        run: cat build.gradle

      - name: Build Application
        run: ./gradlew build

      - name: Run docker compose with logs
        working-directory: ms-example-usage
        run: |
          docker build -t my-app .
          docker run --network host -p 8080:8080 --name my-app my-app &
          
      - name: Run Grafana k6 tests
        uses: grafana/run-k6-action@v1.2.0
        with:
          debug: true
          path: |
            ./ms-example-usage/k6-tests*.js 

      - name: Archive K6 Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: k6-results
          path: ./index.html
          retention-days: 1

      - name: Create Security Patch Issue
        env:
          DEPS: ${{ needs.call_workflow.outputs.dependencies }}
          BRANCH_NAME: ${{ needs.call_workflow.outputs.branch_created }}
          GH_TOKEN: ${{ secrets.API_TOKEN_GH }}
        run: |
          IFS=',' read -ra deps_array <<< "$DEPS" 
          formatted_changes=""
          
          for dep in "${deps_array[@]}"; do
            GROUP=$(echo "$dep" | cut -d':' -f1)
            ARTIFACT=$(echo "$dep" | cut -d':' -f2)
            VERSION=$(echo "$dep" | cut -d':' -f3)
            formatted_changes+="- ⬆️ Updated \`${GROUP}:${ARTIFACT}\` to \`${VERSION}\`
          "
          done
          
          # Create the body content with proper newlines
          body=$(cat <<EOF
          ## 🛡️ Summary
          
          This issue documents the resolution of security vulnerabilities identified in recent dependency scans.
          
          ## 🔧 Changes Made
          
          ${formatted_changes}
          
          ## 📚 References
          
          - 📌 Dependabot Alerts
          - 🧾 Internal Security Audit
          - 🕵️‍♂️ CVE Database (if applicable)
          
          ## ✅ Next Steps
          
          - [ ] 🔍 Verify test suite on staging
          - [ ] 📦 Monitor deployments for any issues
          - [ ] 🔁 Coordinate with security team for final review
          
          #3 pr
          
          🔗 Branch with the fix: [${BRANCH_NAME}](https://github.com/testing-organization/library-mono-repo/tree/${BRANCH_NAME})
          EOF
          )
          
          # Use the -F flag for JSON field input which handles escaping properly
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/testing-organization-jcayllahua/library-mono-repo/issues \
            -F "title=🔐 Security Fixes: Test Failed after patching vulnerabilities" \
            -F "body=${body}" \
            -F "labels[]=security-patch" \
            -F "type=Security"
            
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
