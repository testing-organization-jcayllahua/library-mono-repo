<?xml version="1.0" encoding="UTF-8"?>
<TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Customer API Test Plan with CSV" enabled="true">
  <hashTree>
    <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
      <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
        <boolProp name="LoopController.continue_forever">false</boolProp>
        <intProp name="LoopController.loops">1</intProp>
      </elementProp>
      <stringProp name="ThreadGroup.num_threads">1</stringProp>
      <stringProp name="ThreadGroup.ramp_time">1</stringProp>
      <stringProp name="ThreadGroup.duration">0</stringProp>
      <hashTree>

        <!-- CSV Data Set Config -->
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">customers.csv</stringProp>
          <stringProp name="variableNames">firstName,lastName,email,phoneNumber</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="quoteCharacter">"</stringProp>
          <stringProp name="recycle">true</stringProp>
          <stringProp name="stopThread">false</stringProp>
          <stringProp name="sharingMode">all</stringProp>
        </CSVDataSet>

        <!-- GET Customer by ID -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Customer by ID" enabled="true">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/customers/${customerId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <hashTree/>
        </HTTPSamplerProxy>

        <!-- POST Create Customer -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST Create Customer" enabled="true">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/customers</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="firstName" elementType="Argument">
                <stringProp name="Argument.name">firstName</stringProp>
                <stringProp name="Argument.value">${firstName}</stringProp>
              </elementProp>
              <elementProp name="lastName" elementType="Argument">
                <stringProp name="Argument.name">lastName</stringProp>
                <stringProp name="Argument.value">${lastName}</stringProp>
              </elementProp>
              <elementProp name="email" elementType="Argument">
                <stringProp name="Argument.name">email</stringProp>
                <stringProp name="Argument.value">${email}</stringProp>
              </elementProp>
              <elementProp name="phoneNumber" elementType="Argument">
                <stringProp name="Argument.name">phoneNumber</stringProp>
                <stringProp name="Argument.value">${phoneNumber}</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <hashTree/>
        </HTTPSamplerProxy>

        <!-- PUT Update Customer -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT Update Customer" enabled="true">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/customers/${customerId}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="firstName" elementType="Argument">
                <stringProp name="Argument.name">firstName</stringProp>
                <stringProp name="Argument.value">${firstName}</stringProp>
              </elementProp>
              <elementProp name="lastName" elementType="Argument">
                <stringProp name="Argument.name">lastName</stringProp>
                <stringProp name="Argument.value">${lastName}</stringProp>
              </elementProp>
              <elementProp name="email" elementType="Argument">
                <stringProp name="Argument.name">email</stringProp>
                <stringProp name="Argument.value">${email}</stringProp>
              </elementProp>
              <elementProp name="phoneNumber" elementType="Argument">
                <stringProp name="Argument.name">phoneNumber</stringProp>
                <stringProp name="Argument.value">${phoneNumber}</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <hashTree/>
        </HTTPSamplerProxy>

        <!-- DELETE Customer -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE Customer" enabled="true">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/customers/${customerId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <hashTree/>
        </HTTPSamplerProxy>

      </hashTree>
    </ThreadGroup>
  </hashTree>
</TestPlan>
